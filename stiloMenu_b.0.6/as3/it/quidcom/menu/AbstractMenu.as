package it.quidcom.menu{		import flash.display.Sprite;	import flash.xml.XMLNode;		import it.quidcom.behavior.*;	import it.quidcom.menu.graphics.*;	import it.quidcom.styles.*;	public class AbstractMenu extends Sprite implements IMenuItem {        public var field:BasicLabel;		public var extra:Object = {};		protected var selection:Boolean=false;		protected var list:Object;		protected var space:int=2;				public function AbstractMenu() {			super();			tabChildren = false;		}		public function init(data:XMLNode,stylesBuilder:StyleBuilder,behaviorsBuilder:BehaviorBuilder):void{                    list = data.attributes;                    if(list.space!=null)space = int(list.space);          if(list.x!=null) this.x = Number(list.x);          if(list.y!=null) this.y = Number(list.y);          if(list.name!=null) this.name = String(list.name);          			if (list.behaviors!=null || list.behaviors=="") {				var behaviorFlag:String = list.behaviors;				var currentBehavior:AbstractBehavior = behaviorsBuilder.getBehavior(behaviorFlag);				currentBehavior.target = this;			}        }		public function addItem(item:AbstractMenu):void {		}		public function get selected():Boolean {			return selection;		}		public function set selected(value:Boolean):void {			selection=value;			var i:uint = 0;			for(i=0; i<this.numChildren;i++)				AbstractMenu(this.getChildAt(i)).selected = selection;		}		public function get data():Object {            return list;        }        public function set data(prop:Object):void {            list = prop;        }        //---------        public function deactivate():void{			var i:int;			for(i=0;i < this.numChildren;i++){				var tmp:AbstractMenu = AbstractMenu(this.getChildAt(i));				tmp.deactivate();			}		}				public function activate():void{			var i:int;			for(i=0;i < this.numChildren;i++){				var tmp:AbstractMenu = AbstractMenu(this.getChildAt(i));				tmp.activate();			}		}	}}