package it.quidcom.menu.graphics{		import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFieldType;		import it.quidcom.gui.DynamicTextField;		public class BasicLabel extends Sprite{				public var field:TextField;		private var selection:Boolean=false;		private var str:String;		public var myOwnStyle:Object;				public function BasicLabel (labelText:String,stile:Object){			super();			//trace("labelText.length: "+labelText.length);		     			if(labelText.length > 28){			//	var pattern:RegExp = / /g;			    var index:int = labelText.indexOf(" ",10);				str = labelText.substr(0,index)+"\n"+labelText.substr(index+1,labelText.length);				//labelText.replace(pattern,"\n");			}else{			     str = labelText;			}     			myOwnStyle = stile;			field = DynamicTextField.createTextField(str,{autoSize:"left",embedFonts:true,width:150,height:20,type:TextFieldType.DYNAMIC});			field.defaultTextFormat = DynamicTextField.getTextFormat(myOwnStyle);			field.setTextFormat(DynamicTextField.getTextFormat(myOwnStyle));			field.mouseEnabled = false;			addChild(field);			}		public function set label (labeltext:String):void{			str = labeltext;			field.text = str;			}		public function get label ():String{            return field.text;            }		public function get selected ():Boolean{			return selection;		}		public function textColor(color:uint):void{		  field.textColor = color;		}		public function set selected (value:Boolean):void{			selection = value;			if(selection){				textColor(myOwnStyle.over);			}else{				textColor(myOwnStyle.color);			}		}			}}